# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: cluster-0
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: cluster-0\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpzbW5zMm81aDM3Zmh6d3c3aVZrMmd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBNRGt3TlZvWERUSTJNRFF5TURFMApNRGt3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1T0tvTW0yZ3g0RHFJandMTjdrSHZDalN6QkZOZW82RzQ1MW5wM0wwV3E4dDNGeU8KQmpOMTVMSXVoRGdmNExSNndERmlqUnpFNzdPdnIzd3hEUjl4MWpEaUR4WlFrNUJLNUxNRlE4UklvN2tnVW9TSgpUb3VQSVNSMjNvT2h5YlFQa3NjdlhRNlZjdGZ2RG5McXVWbGVVTGZScEQ1b0hUejhENnRJRldPWGtIY0tUTHBjClBzRGtTdFZnaGxDR3llOFZmVURNS2hrR0RMN3pTZHk3WjM3UFBRcEYzYTZkSDFFcVZ2V0FtNjVJNHh6d2xYUVEKUnMzaXVDNXQwTWxoc05yU3I3K1p6VlBkb01ENS9JZmZtaW1heXlqRmg0eXNIL2tnQ1VzbmxxU0ZWeWhoc1h6agphTitDbjk5L0pFcnFDSjlMYjFzZmxLY2VuY3VJWlZqU3hDN1Qrd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTVFYc3dwZ0hpZFB4MTBNcWNYNjBtT29JYW85TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjlic011dDRmak9BbGF1K3FsNmdmbVc4aW5xUUpwQm0yQjBLRnJLVFNJenBhMmgzb3l2UDFaClpQeENQQWJ1VHN0bTQwVUFJOHJ1bFJQU1E5SU84dmhJSmlNKy9mSGxCYVorREY3cU16Vnh4dVh6ekQ3OVkrOGoKNFdCUFRoTTU3S0tBSFA0TXJqQWxpMTRnMzVFQTZhMy9HSllWTFU0QUZNVSt2ZTRWMi9aaHd4dmQzLzI2VVJxUgpHSWJmdjFIcEorZkl1VXQ1Q0Qwb3RnOXdNSk90WVVhellVZlByNkVvczJmYjIweGNja2JMODdBaGRHOHZ3NGlRCnliRGNpbldYTk5wSjFkMExKUDVMcnpFVkxYRDRkR3hsdmtFQ2pnZVk3b0RYWWpKK3JkMGRpUmRYcWYycFd2UUUKUUlNdEhTSDErbHloRWVuNnArcWp6dnZpODIwYzVuL1kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNU9Lb01tMmd4NERxSWp3TE43a0h2Q2pTekJGTmVvNkc0NTFucDNMMFdxOHQzRnlPCkJqTjE1TEl1aERnZjRMUjZ3REZpalJ6RTc3T3ZyM3d4RFI5eDFqRGlEeFpRazVCSzVMTUZROFJJbzdrZ1VvU0oKVG91UElTUjIzb09oeWJRUGtzY3ZYUTZWY3RmdkRuTHF1VmxlVUxmUnBENW9IVHo4RDZ0SUZXT1hrSGNLVExwYwpQc0RrU3RWZ2hsQ0d5ZThWZlVETUtoa0dETDd6U2R5N1ozN1BQUXBGM2E2ZEgxRXFWdldBbTY1STR4endsWFFRClJzM2l1QzV0ME1saHNOclNyNytaelZQZG9NRDUvSWZmbWltYXl5akZoNHlzSC9rZ0NVc25scVNGVnloaHNYemoKYU4rQ245OS9KRXJxQ0o5TGIxc2ZsS2NlbmN1SVpWalN4QzdUK3dJREFRQUJBb0lCQVFDeVY2MkpCWVRHanJ0ZwppM3FPSTUxVVRsYlo3UTE2MWoxaWM0NkZtZnV1QVZ0eG5haUlTbWF0R08xSDF0ZDM1Z2pUWW1lUTNuN1E2eWlVClN1ZUpleHZmTWwyaU5kZjQ4dkI0UE1sNFlTUGNkbTRwL2QxakZ6a2lNT0J5Und5ME5wbi8yelliZ3phTnNwVXgKby9jakR2Qi9Zb3QyTjY0MlFnT0JUZ3V2cHRjOUZ4cm1WWDZpTllhL2t0YW0xcmt3cituZEJrZjFmUXhYWUZscwoxa2E2aU5CQVg2NTg5Qy9UOGdSdlVzY2VwZEtBcHdnM3l1SFJ5ZWxPdmpFRFppL21nK2hpTlQycTVkS09RZnFsCkUxMWhWR3NQekFjcEN6Qmd5NjFhenI4emZwTlJJS0xtNno0OCtFeHRUWHRCbmVnUGNJcVlwQ0g3ZWh4V0tESGwKdFhYOTdyUWhBb0dCQU8zNGN2Y1dqcjBtSDdxTW8yN3BaM1J1OEs0RHAyZTAwMlhJSkI2R0FUSUd2N2pvOVVxMgpIcnZldWVqYzhSMUxxa0pYdituT212RHBidFlsVytmTllhOEdjQjZ3ejkwOTNyVDI2UmVaTTNFVmV0NzhzT1hHCktjQjdYYnhDWXJiSWNBd3RXWE92cHZYSjR6bTc5L280aG0zY0xLSHRvcVdOV2RNZXNWSHhZVVZSQW9HQkFQWTUKLzJQMGtHQm1HK3dBWmFFenZSbzBwZmdlL1RlcnJDbGZLK244TGFlRFo2WGt2aytvY3hYSXUrWWF4RkxKbmhuTApwY0VXdjVjRkcvZWRXc0tod1lGd0pFQ216RHdWVVJFM0Q0Qk9aWkhaSXlqeWVFNHdabzBXU0F4Vkd2eEdSMzhTCnJiU0lyTnJWWW1Idjc0dmJpMWVaeTU4ODZEL2FINCt0WmY4NjB1R0xBb0dBTzB1dkNkWjdGcktMTVdhZHlxTXAKL2g4dXBZMlBodzNOcHd6cHd4bE03dlF6alpXdW1VRXNBMUFLTHZYdXRvZ0dFcVhlMGhtRERnaDhiNnU3Yk5VRwpSQ0JzaTVrdkVrZTZXSWsxcDRXckJjQitiMVd6bG0xOE5kUUhsVU5OYVpJa0tVU2JoM0g3UGo5aCtSN1hPV2dnClJ2dVh1M21GRDQ5YkZIb1BZUVd1WVNFQ2dZRUE0ZTlHRVlvUUVPU2hLbVVTM0dDRlhNNkNuTEtTMThxSEowOVYKRkZkNTdRUCt6NUtkcnFwN0w3b0o4Sk1QSW9ndXNxelRZK0pqMjBlczZnRlJqdGF1b1A4dHhNVkpFcmpjc2xjNwp1aGcxeXliYnhHNzVSWVhVRkJJbCttcjlZQTk4KzNWQVB6QktyR0t3Ni8wbWFjY0NqVmRxS0t2UzBRUnRnWUV5CjNvZ3ppUkVDZ1lCdzBIbFZKdWNNNzd6eVpLOVNHZmRhN2VoV3FlUTQ2UEtabHUzYXBBS2hTN0VEaWJnSyszcXQKbGtDZ3dGWjY0Z2x0bU13L0pVby9lM29wK1ZOeE00TWRTdlpJbk9JekxaemI2KzJrNExsaHJvUFl1dEhBYmRQSgpRRlM1V2dRcnJSS2ZWMUVoaWUvZmIzaXMrQVZzb2FDdmNtWGZhOUlETHJEOW44S1lmN3VPYUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpzbW5zMm81aDM3Zmh6d3c3aVZrMmd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBNRGt3TlZvWERUSTJNRFF5TURFMApNRGt3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1T0tvTW0yZ3g0RHFJandMTjdrSHZDalN6QkZOZW82RzQ1MW5wM0wwV3E4dDNGeU8KQmpOMTVMSXVoRGdmNExSNndERmlqUnpFNzdPdnIzd3hEUjl4MWpEaUR4WlFrNUJLNUxNRlE4UklvN2tnVW9TSgpUb3VQSVNSMjNvT2h5YlFQa3NjdlhRNlZjdGZ2RG5McXVWbGVVTGZScEQ1b0hUejhENnRJRldPWGtIY0tUTHBjClBzRGtTdFZnaGxDR3llOFZmVURNS2hrR0RMN3pTZHk3WjM3UFBRcEYzYTZkSDFFcVZ2V0FtNjVJNHh6d2xYUVEKUnMzaXVDNXQwTWxoc05yU3I3K1p6VlBkb01ENS9JZmZtaW1heXlqRmg0eXNIL2tnQ1VzbmxxU0ZWeWhoc1h6agphTitDbjk5L0pFcnFDSjlMYjFzZmxLY2VuY3VJWlZqU3hDN1Qrd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTVFYc3dwZ0hpZFB4MTBNcWNYNjBtT29JYW85TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjlic011dDRmak9BbGF1K3FsNmdmbVc4aW5xUUpwQm0yQjBLRnJLVFNJenBhMmgzb3l2UDFaClpQeENQQWJ1VHN0bTQwVUFJOHJ1bFJQU1E5SU84dmhJSmlNKy9mSGxCYVorREY3cU16Vnh4dVh6ekQ3OVkrOGoKNFdCUFRoTTU3S0tBSFA0TXJqQWxpMTRnMzVFQTZhMy9HSllWTFU0QUZNVSt2ZTRWMi9aaHd4dmQzLzI2VVJxUgpHSWJmdjFIcEorZkl1VXQ1Q0Qwb3RnOXdNSk90WVVhellVZlByNkVvczJmYjIweGNja2JMODdBaGRHOHZ3NGlRCnliRGNpbldYTk5wSjFkMExKUDVMcnpFVkxYRDRkR3hsdmtFQ2pnZVk3b0RYWWpKK3JkMGRpUmRYcWYycFd2UUUKUUlNdEhTSDErbHloRWVuNnArcWp6dnZpODIwYzVuL1kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNU9Lb01tMmd4NERxSWp3TE43a0h2Q2pTekJGTmVvNkc0NTFucDNMMFdxOHQzRnlPCkJqTjE1TEl1aERnZjRMUjZ3REZpalJ6RTc3T3ZyM3d4RFI5eDFqRGlEeFpRazVCSzVMTUZROFJJbzdrZ1VvU0oKVG91UElTUjIzb09oeWJRUGtzY3ZYUTZWY3RmdkRuTHF1VmxlVUxmUnBENW9IVHo4RDZ0SUZXT1hrSGNLVExwYwpQc0RrU3RWZ2hsQ0d5ZThWZlVETUtoa0dETDd6U2R5N1ozN1BQUXBGM2E2ZEgxRXFWdldBbTY1STR4endsWFFRClJzM2l1QzV0ME1saHNOclNyNytaelZQZG9NRDUvSWZmbWltYXl5akZoNHlzSC9rZ0NVc25scVNGVnloaHNYemoKYU4rQ245OS9KRXJxQ0o5TGIxc2ZsS2NlbmN1SVpWalN4QzdUK3dJREFRQUJBb0lCQVFDeVY2MkpCWVRHanJ0ZwppM3FPSTUxVVRsYlo3UTE2MWoxaWM0NkZtZnV1QVZ0eG5haUlTbWF0R08xSDF0ZDM1Z2pUWW1lUTNuN1E2eWlVClN1ZUpleHZmTWwyaU5kZjQ4dkI0UE1sNFlTUGNkbTRwL2QxakZ6a2lNT0J5Und5ME5wbi8yelliZ3phTnNwVXgKby9jakR2Qi9Zb3QyTjY0MlFnT0JUZ3V2cHRjOUZ4cm1WWDZpTllhL2t0YW0xcmt3cituZEJrZjFmUXhYWUZscwoxa2E2aU5CQVg2NTg5Qy9UOGdSdlVzY2VwZEtBcHdnM3l1SFJ5ZWxPdmpFRFppL21nK2hpTlQycTVkS09RZnFsCkUxMWhWR3NQekFjcEN6Qmd5NjFhenI4emZwTlJJS0xtNno0OCtFeHRUWHRCbmVnUGNJcVlwQ0g3ZWh4V0tESGwKdFhYOTdyUWhBb0dCQU8zNGN2Y1dqcjBtSDdxTW8yN3BaM1J1OEs0RHAyZTAwMlhJSkI2R0FUSUd2N2pvOVVxMgpIcnZldWVqYzhSMUxxa0pYdituT212RHBidFlsVytmTllhOEdjQjZ3ejkwOTNyVDI2UmVaTTNFVmV0NzhzT1hHCktjQjdYYnhDWXJiSWNBd3RXWE92cHZYSjR6bTc5L280aG0zY0xLSHRvcVdOV2RNZXNWSHhZVVZSQW9HQkFQWTUKLzJQMGtHQm1HK3dBWmFFenZSbzBwZmdlL1RlcnJDbGZLK244TGFlRFo2WGt2aytvY3hYSXUrWWF4RkxKbmhuTApwY0VXdjVjRkcvZWRXc0tod1lGd0pFQ216RHdWVVJFM0Q0Qk9aWkhaSXlqeWVFNHdabzBXU0F4Vkd2eEdSMzhTCnJiU0lyTnJWWW1Idjc0dmJpMWVaeTU4ODZEL2FINCt0WmY4NjB1R0xBb0dBTzB1dkNkWjdGcktMTVdhZHlxTXAKL2g4dXBZMlBodzNOcHd6cHd4bE03dlF6alpXdW1VRXNBMUFLTHZYdXRvZ0dFcVhlMGhtRERnaDhiNnU3Yk5VRwpSQ0JzaTVrdkVrZTZXSWsxcDRXckJjQitiMVd6bG0xOE5kUUhsVU5OYVpJa0tVU2JoM0g3UGo5aCtSN1hPV2dnClJ2dVh1M21GRDQ5YkZIb1BZUVd1WVNFQ2dZRUE0ZTlHRVlvUUVPU2hLbVVTM0dDRlhNNkNuTEtTMThxSEowOVYKRkZkNTdRUCt6NUtkcnFwN0w3b0o4Sk1QSW9ndXNxelRZK0pqMjBlczZnRlJqdGF1b1A4dHhNVkpFcmpjc2xjNwp1aGcxeXliYnhHNzVSWVhVRkJJbCttcjlZQTk4KzNWQVB6QktyR0t3Ni8wbWFjY0NqVmRxS0t2UzBRUnRnWUV5CjNvZ3ppUkVDZ1lCdzBIbFZKdWNNNzd6eVpLOVNHZmRhN2VoV3FlUTQ2UEtabHUzYXBBS2hTN0VEaWJnSyszcXQKbGtDZ3dGWjY0Z2x0bU13L0pVby9lM29wK1ZOeE00TWRTdlpJbk9JekxaemI2KzJrNExsaHJvUFl1dEhBYmRQSgpRRlM1V2dRcnJSS2ZWMUVoaWUvZmIzaXMrQVZzb2FDdmNtWGZhOUlETHJEOW44S1lmN3VPYUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpzbW5zMm81aDM3Zmh6d3c3aVZrMmd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBNRGt3TlZvWERUSTJNRFF5TURFMApNRGt3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1T0tvTW0yZ3g0RHFJandMTjdrSHZDalN6QkZOZW82RzQ1MW5wM0wwV3E4dDNGeU8KQmpOMTVMSXVoRGdmNExSNndERmlqUnpFNzdPdnIzd3hEUjl4MWpEaUR4WlFrNUJLNUxNRlE4UklvN2tnVW9TSgpUb3VQSVNSMjNvT2h5YlFQa3NjdlhRNlZjdGZ2RG5McXVWbGVVTGZScEQ1b0hUejhENnRJRldPWGtIY0tUTHBjClBzRGtTdFZnaGxDR3llOFZmVURNS2hrR0RMN3pTZHk3WjM3UFBRcEYzYTZkSDFFcVZ2V0FtNjVJNHh6d2xYUVEKUnMzaXVDNXQwTWxoc05yU3I3K1p6VlBkb01ENS9JZmZtaW1heXlqRmg0eXNIL2tnQ1VzbmxxU0ZWeWhoc1h6agphTitDbjk5L0pFcnFDSjlMYjFzZmxLY2VuY3VJWlZqU3hDN1Qrd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTVFYc3dwZ0hpZFB4MTBNcWNYNjBtT29JYW85TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjlic011dDRmak9BbGF1K3FsNmdmbVc4aW5xUUpwQm0yQjBLRnJLVFNJenBhMmgzb3l2UDFaClpQeENQQWJ1VHN0bTQwVUFJOHJ1bFJQU1E5SU84dmhJSmlNKy9mSGxCYVorREY3cU16Vnh4dVh6ekQ3OVkrOGoKNFdCUFRoTTU3S0tBSFA0TXJqQWxpMTRnMzVFQTZhMy9HSllWTFU0QUZNVSt2ZTRWMi9aaHd4dmQzLzI2VVJxUgpHSWJmdjFIcEorZkl1VXQ1Q0Qwb3RnOXdNSk90WVVhellVZlByNkVvczJmYjIweGNja2JMODdBaGRHOHZ3NGlRCnliRGNpbldYTk5wSjFkMExKUDVMcnpFVkxYRDRkR3hsdmtFQ2pnZVk3b0RYWWpKK3JkMGRpUmRYcWYycFd2UUUKUUlNdEhTSDErbHloRWVuNnArcWp6dnZpODIwYzVuL1kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSkRkNzZIMlNlb0FpcDFNZjJ6UFZVVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJeE1UUXdPVEExV2hjTk1qWXdOREl3TVRRdwpPVEExV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFES1JZZ2dwWkhrcUd6bGgvNVpWVWN6cVI3K056cGEKbGRpVHJlOXc2V3NnYmwvaUFpSG1hR2JCWUp2b1VpcDRNQlJCdytPYWFmNzFaMUpjRFBERi9IRkxtM09BTHhNZQo3akhDMWhMaXRRTWl3anJPa3pzS0dGcnYydXdxSjJpcjBsMkpFRWlGbXdqTHdMY0FUWXhSZUYrOURpTFhWQzFNCkY2WEMwdWdQMU1paUVMR2FadlIxTy9HWUdibjJoMDBhYVBGSy91N3o4d0lTRnFNL2lIak14L0RXSXZCZ1hTaloKRzhFSU56dStkNU1qSHlJZitkc3ZLNFQ2VE5TZTZWcFRNV1cvVjF6RW84RUwvU3BxVGRDeDZPRFRJcFBhV1ltegpkdlNDZHkvN2xqcUtHN3pER3UveXdBVFJ4NHFBZG1ZUWMwQnZVVFNDS1Nyb3pRVDZhMWg2WkN1N0FnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZNUVhzd3BnSGlkUHgxME1xY1g2MG1PbwpJYW85TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFHeVcwWi9BQmtkUm50YkZseDE0OEU4SEhXd3dQZEtPY2xPRWV6cUFUVUpTTEdFWEIKZWFUcnJRVS9TTTlUQ203dHM1WWg0MlcxeHNFMGFhSmQ0c1dsWmErT1hMM2t3TldJeWxyR0Z2U0h1QXZiaHl3WgpyeEZ4TEF2MUxEcmsxN01OTXJQTU55cWFLcGtqSHFPNGI1U2pTdmFZcWZOcWh5TGZWYzNBbVJpWHVDZ3h5TXJkCjJ1dFFHTFBBRTJ3QlFodFYvZnlUcjlQU2NxMmpDd3lRWjRwTGJ0cUlLS0NIcEtKZmxMV0ZrYTZVNldMZHEvbjIKQ2dIckhoeUd2ZHJrK0hDL0QzNzdMS05jNS9nMk1UQ2RPNVFyWU8rQTZSOUIzOE1lR0MxSGpJU2tWNkJuWWxHRwpvQWcrZmJHSkZ3M2tEYXdKaGVVWElGa3hCUldtZVdBQ0ttaUdLQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWtXSUlLV1I1S2hzNVlmK1dWVkhNNmtlL2pjNldwWFlrNjN2Y09scklHNWY0Z0loCjVtaG13V0NiNkZJcWVEQVVRY1BqbW1uKzlXZFNYQXp3eGZ4eFM1dHpnQzhUSHU0eHd0WVM0clVESXNJNnpwTTcKQ2hoYTc5cnNLaWRvcTlKZGlSQkloWnNJeThDM0FFMk1VWGhmdlE0aTExUXRUQmVsd3RMb0Q5VElvaEN4bW1iMApkVHZ4bUJtNTlvZE5HbWp4U3Y3dTgvTUNFaGFqUDRoNHpNZncxaUx3WUYwbzJSdkJDRGM3dm5lVEl4OGlIL25iCkx5dUUra3pVbnVsYVV6Rmx2MWRjeEtQQkMvMHFhazNRc2VqZzB5S1QybG1KczNiMGduY3YrNVk2aWh1OHd4cnYKOHNBRTBjZUtnSFptRUhOQWIxRTBnaWtxNk0wRSttdFllbVFydXdJREFRQUJBb0lCQUgya3BVTktOWTZvaEVRcgpyblhGUUI0NTdsT1E4TUYyRlByZTd6M2U4RGxMOW1sSVU5QndoMnVWWENMNmJ3RUxOSG9KZVNiZ3NvdXphM2hjClhXOU9PUDN6Q05MVjZ2V3FsZVJsMzROTlZ5NVBJZ0pSZURuMEdRQ21wMDRqL3FQRVgyK1ZXc2NMSDNLWk9kT0oKV0NEL09kRVFwOW5Eb3dPQ0tPZ1U1Q3Q1VEV0R0lxRmx3dFU5UmtxV3ZyYktiVGdEci9kQ280RWRiREtYdmorUQpmcG15ZGp3c3JaUXVXdmlCNUFaVFFXWFJTakJzTFFab1VCLzZ5WVI1NG1qZnZNUW9mbUZrVGZ5ZWlyT043OHJmCjlEc0RJYjBUcU5MODBicjl5TWtaeFFtVjVvZk1ac0N5MmFJSC91ZmNWZzJCTklVMGVGTGdUM2Q1T242Nmh3M0UKT0I3bXVBa0NnWUVBNXM1RVdTWFJSYUVFWlErWUR4NjNrdjdsQ1ZScTdINkt2STNIOHhpNGxuS2EwZ2c2cklYdgpTNTA0Ull5WjVaR1N0TmJXdEo0RTFlOGpNNnZKMGdPazh4UDNiQUp0OVVienovYU1oSGg2RVlFcVBoWUpTTXdQClI3RzJZK2Ywa1VEMVNoSUE0Z3BiZnkyM2d3ME96MTVHdUxpMEM1R05LUy82TWUzMzBUN1R5ZmNDZ1lFQTRGbmwKS282SXR3dml0UUFIL01tQ3k2cjF2VWNJa2RaMDlpbUdiWUQ5aWNBQzcyaFQvb3g3WWZxT0h6aUNNdGwrVG1yNgo1cEt4UGdNRjBQT2MzWUNQVVlLOWY3a0J0bG11VVh4a0RQbDJyYW1pMHZyb0VSeThITlYzVFZ4RzdGcll0OThSCk1xOFRNdmRsa3BYdFZVUjZEdU8zczZEc1NVK1k2aWFmV1BSZlcxMENnWUVBeFQxa2YyS29FbjdseUkrby9OTGQKUWt0OTQ1azJ2dC90SS9GdC9Ec1dFOHZncnJqRm00WGgxNWFGN2ptWGt1M3lsNFE1ZTZUR3NTUnB5dEIxNm5tZQp6dlF6THlSc1gzM0JBZW5LYjdLZGJyUVpLM0dkZ1k2UlNFMkFkcVJWQm9TaW1pZ0VoU2NneGZDRnNRTEpzMEQzCjR3aEZKTlcvOG9ERHFVT1owa0dFc0VVQ2dZQW5DdDNicXhSVnJvYlVjdDN3K3V4OUh4Skd6eTdKbW1XZVZSbWsKd3RiY2V3TEh3UU1sQURPVW1ITFZNaE5PWUJVZjluUVZYaC9rSjhpQ1ZYTE9CVXBycC9Ic1lUalFFQWxLK3ZlNgpYa3R0NjJCL2tOU0Q3ZGs2dDFkY3FodFpsSEcwaGVoTFJyWnpueVFZLzJoZTkxeTZiSnlTY1FYTnVFRm5Oak55CjJvd2hyUUtCZ1FDbjBQYnBSVzdEdFV2cm1MZkpvUGhOOVFpa2hmWDg5aEhRc2pYS2k1VlhNZWNyWTVqTkxzZzkKM3NHdU5PeGN5OEIvamo1UG02V0hXOXBsbjd3amw0ZHZDQXdSUk83aS96Uk9lc29SQTBGaU1aMGcvT3RUQ0NYZwovNzdiZTkwNjFodUhUeFVYOG9WVXdENmM2eDVrMjYzZVFXRm1JNlpENHlsSmJ0Wlh4d0dUTXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpzbW5zMm81aDM3Zmh6d3c3aVZrMmd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBNRGt3TlZvWERUSTJNRFF5TURFMApNRGt3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1T0tvTW0yZ3g0RHFJandMTjdrSHZDalN6QkZOZW82RzQ1MW5wM0wwV3E4dDNGeU8KQmpOMTVMSXVoRGdmNExSNndERmlqUnpFNzdPdnIzd3hEUjl4MWpEaUR4WlFrNUJLNUxNRlE4UklvN2tnVW9TSgpUb3VQSVNSMjNvT2h5YlFQa3NjdlhRNlZjdGZ2RG5McXVWbGVVTGZScEQ1b0hUejhENnRJRldPWGtIY0tUTHBjClBzRGtTdFZnaGxDR3llOFZmVURNS2hrR0RMN3pTZHk3WjM3UFBRcEYzYTZkSDFFcVZ2V0FtNjVJNHh6d2xYUVEKUnMzaXVDNXQwTWxoc05yU3I3K1p6VlBkb01ENS9JZmZtaW1heXlqRmg0eXNIL2tnQ1VzbmxxU0ZWeWhoc1h6agphTitDbjk5L0pFcnFDSjlMYjFzZmxLY2VuY3VJWlZqU3hDN1Qrd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTVFYc3dwZ0hpZFB4MTBNcWNYNjBtT29JYW85TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjlic011dDRmak9BbGF1K3FsNmdmbVc4aW5xUUpwQm0yQjBLRnJLVFNJenBhMmgzb3l2UDFaClpQeENQQWJ1VHN0bTQwVUFJOHJ1bFJQU1E5SU84dmhJSmlNKy9mSGxCYVorREY3cU16Vnh4dVh6ekQ3OVkrOGoKNFdCUFRoTTU3S0tBSFA0TXJqQWxpMTRnMzVFQTZhMy9HSllWTFU0QUZNVSt2ZTRWMi9aaHd4dmQzLzI2VVJxUgpHSWJmdjFIcEorZkl1VXQ1Q0Qwb3RnOXdNSk90WVVhellVZlByNkVvczJmYjIweGNja2JMODdBaGRHOHZ3NGlRCnliRGNpbldYTk5wSjFkMExKUDVMcnpFVkxYRDRkR3hsdmtFQ2pnZVk3b0RYWWpKK3JkMGRpUmRYcWYycFd2UUUKUUlNdEhTSDErbHloRWVuNnArcWp6dnZpODIwYzVuL1kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lSQUxnbFlGeUVYT1k2RFhOTmNRZVRaNGN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBNRGt3TlZvWERUSTJNRFF5TURFMApNRGt3TlZvd0xERXFNQ2dHQTFVRUF3d2hLaTVqYkhWemRHVnlMVEF1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTlEMmwwcVpjRng2dlZmdjQKL1NMSWQvVkNoUThkakpBODB0NkI1Ykw2Nld2TW9acGd4NExOYk83NTNUVU90WkNmWGtWY3RBd1gxR2RkcHcxVwpCb0dlaWNwcEFqcnhPcVRKL1FqYjRUaG5nbFZBWEIxVkxNUUt2ZWMzam5HQVRIREpKV0g1MFBid1k5K2toelFmCkFMZ3JDQ0hvS3lzQnhqZk85enRGQno3SDQ3dmxHVnF4WkJUTjJCYUR5UjNXSFdYbXhEeEU1cURmdUJBM0pXVGgKTzNhRXArYTNGU3hUYVlNbUI4UjlyMnJWOVRLOG0wMW5IbGJCZXQ0UlJlaTlNUFJHOW9FVnBWQWtsRVMxZXlFawpFOC81elhJRERSQW9ldC9MZFVldWVVeURzREZ1T2xoby9XYVA0V0FYcEJzRUplTEVnUXE0SmlJRmNOa1BOcGIzCitCWTloUUlEQVFBQm80R1BNSUdNTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVEVGN01LWUI0bgpUOGRkREtuRit0SmpxQ0dxUFRBc0JnTlZIUkVFSlRBamdpRXFMbU5zZFhOMFpYSXRNQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ0VnNktldmVoNnFLT1FGa2Zqdyt2MDUKNTVTVFFqSVBPYzZIMVlSK2hndUo5OGh0YU5nVmVVK3FGUHY2ckh3aEhHODFmK1JjQnMzdGxpdDh0akNiSURoWQpUb3pnL1RiNHJiQkNXbEFMdHBCYzNmOTU5MVhVYU1YcTI1THF0WWRVUmJDU2MvbENpTE5xTzVXeTBMQjVIL2dMCk1ISWVkQU1YNGFBbFdQdW5CdloxVGI0bGlQQ0VWSGRjUDM3aU5uSGlKWmVxeVovdE5hOGVLSzRmTkI4NDh4eHEKSTRNeUFHeFVVOTIzTEhuSUFwQ3lSQTFrUUZ0YmIwbW9YYy9UVEViRklQeGhrdGR3UGRjeW00cnhzU0M4N0IzWQpqY1pUMGxGYit2R2w4OGJVMzA5Q1VtWG9oV1VKSGJQK2YrU1hhV01CM0VzRVlrck5VWlVROGE0VXhxUWNmMnc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBOUQybDBxWmNGeDZ2VmZ2NC9TTElkL1ZDaFE4ZGpKQTgwdDZCNWJMNjZXdk1vWnBnCng0TE5iTzc1M1RVT3RaQ2ZYa1ZjdEF3WDFHZGRwdzFXQm9HZWljcHBBanJ4T3FUSi9RamI0VGhuZ2xWQVhCMVYKTE1RS3ZlYzNqbkdBVEhESkpXSDUwUGJ3WTkra2h6UWZBTGdyQ0NIb0t5c0J4amZPOXp0RkJ6N0g0N3ZsR1ZxeApaQlROMkJhRHlSM1dIV1hteER4RTVxRGZ1QkEzSldUaE8zYUVwK2EzRlN4VGFZTW1COFI5cjJyVjlUSzhtMDFuCkhsYkJldDRSUmVpOU1QUkc5b0VWcFZBa2xFUzFleUVrRTgvNXpYSUREUkFvZXQvTGRVZXVlVXlEc0RGdU9saG8KL1dhUDRXQVhwQnNFSmVMRWdRcTRKaUlGY05rUE5wYjMrQlk5aFFJREFRQUJBb0lCQUNuZXc2V29GVk4xVkRPVwpYYW52bzVSRS9HRlpKUVNxMlhLQTZKM2JILzZTRjJPQTFxUjlQUUEydTZqN1pva2p3TjVsWDY0U0FLZk9ESlVOCnlUaVdVZnBuTTdkSktYK1hMblZ0Wmx4bTBmL2E0NHluRHFuODlhWjJrK1NjZXBVZ0pLdCs3MWV1YmFtQmRuQWoKTkVsb1NTQTh4OU5XclJneEN3OEJIeVZOMHZDc09Lbks2TTkyZDViK3Z3dm1XbWgyVUxkWUQ3ZUxhaFRaUjJkMgpiWDRiaHpXS0pOaWhqbkQ3VUxTMjlPNjRIVlg2TFJzcWE5R0F2R3RmZmR3RzVtUTl6Y2JGWGhjY3ZIZ3ZibG42Cnd3cHlWSXhXenBmSE91M0dyZzA5WVFkYWhwTTFVNmp3TkdqME9wYXJuYVR6dXAwL0hNUDViUXlnVnBmVXNraWoKTjJnRmJHVUNnWUVBLzdwUWJydUZpSk1UZk1TTXBkdHFsZ1VaZlA4bFIyZzlQSGxYdlZqblRIRFJjMnVURis3UwpodVRkNmdXVVZ2eWZCOExOcDI3endFRVRmSEd4WXJ0aXJxMnNkcWpkU0tUdlBzdVJvVjB1TFQyVnJabFNEVGhvCmI0VVhNVHJoaVA1eU9tVUFZZFByNHVTYzZrZWxKaFJTRjNQVnNWblk1MHRXY2NiVUxubFVxYzhDZ1lFQTlJQTAKRHhBR05rUVI1OXJRYjJ5d1dIcVQrdUttTUw1bFpWYkVkRDBpRVZjL3J0UnpJZkplQWNhbDZ4bTNPMy92d255WApZTTVpd1lPSFZiTTZTSUF1dWUwZEp0N2FpMjhZeTVPckEwUlVUZUV5eVFKUmVFV05INllDNlVjdGh2aDZCd0hrCnVTT3RVUWFPUXRYYStvR0tuVm1nZGpKK2wyTDY1anJpMkkwZGZHc0NnWUVBNGN5V05xQVhVVGRrVHBlU0JPVFAKb1RWUmd5QWF2NGxZQUt5My96V2Z6Y3dUOU5ENHFYb3pvKzR6eis0clEvOTlRRElPdXBkcVhNaFpOMW1BSWtpSQo0dW53elRsZllrUllCMTloOEZSQmNLcmZIZEN5TllBb0hzZ3FhVXF2Vi9JcjFFbllZNGptMEluQno4K0JFRFdECklyZ2g2SjRIdW5xNEVuQllhOHl3SjlzQ2dZRUFtblBDYnlGNFN4K0ZFQ295TWJFL1ZTVmFCY3JYb1VNbFduY04KYzBDTEhOazQ2WUJibXI0NGxIYWdxWHQ5UEtEOUhLY0lHYWRHeTJnRFBpZ1NVV3BvR2h1bnByNXc0RlEySGFRVApDK1ZHUEV4ZWdJeHVXc1BVK29Fc3BhREpLZElkZy8rMk5SNU1oanJWODNLVStscUs3Z3VJU2lKcnhjWkpLTmRhCkplSS9GakVDZ1lFQWdxVTNYRGhDeWt4U1VWcW13ZWVFS2ZUb1VBS2gxK1VNRkZIK0RKcVhsWFBxQUxna3FCUXcKbk02anFxYThrOFlKTnY1eGhHdzEvYVRmMEFlRjdTQk9PcGQ4VERQYUZjSmlxY1FUUkVJV1krOVBRMVRwQkVvVApFS0hEZjZ4bmgyZU9VZ0JDRjB3ZGtyUGlRT01yRmNnUVFYQXdkRm1IdFZDV0xaU2thZ3d6WXNJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 736645377ba808f2f9fa2728d6349e0e66e96d25dc996621e4cc7031931f75e2
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: t.i.ctr.farm
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 5d81f166d35c295bfcc150b5cb4e6c391c44f887cfe07c06a8ec28d81a7f9c25
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: t.i.ctr.farm
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: t.i.ctr.farm
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: t.i.ctr.farm
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
