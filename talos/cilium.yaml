---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtaSUNPYkhkQ2loTUo2UmJjeVUvR1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFd05ESXdNakkwTWxvWERUSTNNVEV3TkRJdwpNakkwTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExTFFMYytiTEYveGZ0eWgxMVdBMFpTY3VhTHZhNDNHeTg4VlVMQWs5cUFadUkyMGEKTElEZVlrV3JoVzZLeld0S1VvSS9uRnpKQU51VWUyNWY3RmFpblZ6eGJ4VFphdzNrelAzaWpuWnJJTXdFaHp6WApUUEEvK0w4b284TFcrTzNIMWJGTFN0OWZVTlN1Wi9XRktOdDNlS0svcFI4YlZDaWR6OWVJT2N6WGMwMytiYTIyClk1UVIvKy81SHptalF1R2pJb3NFOHVxN3RKM2JSYlZDMkEzMitVSVZVbVQ5Mk53NXlXQ2JIOWY2akxRcnhsUFMKemU1WkUyL2Erb1RQNGhZU1ZoS2VzM0pVM1Zua2FWTkZ6eklXOHdVUE92NDNkWURvSHFhMTkzbXlzZFV0MVE3QQpyL2hpaWljR3dNRE5TN0VWRHdOM1ZoYk1tbDNDaFJhMjV0LzFtd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREFJajZzVlkvQmViVEFOOGgwa1ZrN0U3VzRWTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3RoRG9YdUZHWUZLUmtxVHV5TFZyK25KcnY5amZ1RjFWMTFqVE91QWUvNmhTTndNM3lpcnRXCkVDanIyYmpkVG1Jd2VyNnNhT01qSWo5aWJFZ29DSEZIKzQxTWZHV01CMVMxK1lJZGphZWVaMTVPaS9UNzZFNUcKVUdObnNUSFB1Qnk2YzZrTmVOREVXSGJreUtyYm9yWllPUDIvUDNDeXR0UDZwUnlURjAwbTZ3Q2FTaHJYNlgvUAptZVFSakpoekhpVGZDMFdSZ0h0eEtQN0JGOEFhUEovemMrNlMvMFFrVG9BbHVsYjgwMHZWNnJyRkU1eVVpbmJXCnd5bHRxQldTLytXNlBRNlRTWXNHbjVUZThlOWpkakJuOEdSajJHaDM5UVJqZExvNXFNSC9ZY3JOeURDVmc2a08KcDFHcVh0RUVPTnBOM0hheVNGaEN5Q0YyUlFHbytIRGoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMUxRTGMrYkxGL3hmdHloMTFXQTBaU2N1YUx2YTQzR3k4OFZVTEFrOXFBWnVJMjBhCkxJRGVZa1dyaFc2S3pXdEtVb0kvbkZ6SkFOdVVlMjVmN0ZhaW5WenhieFRaYXcza3pQM2lqblpySU13RWh6elgKVFBBLytMOG9vOExXK08zSDFiRkxTdDlmVU5TdVovV0ZLTnQzZUtLL3BSOGJWQ2lkejllSU9jelhjMDMrYmEyMgpZNVFSLysvNUh6bWpRdUdqSW9zRTh1cTd0SjNiUmJWQzJBMzIrVUlWVW1UOTJOdzV5V0NiSDlmNmpMUXJ4bFBTCnplNVpFMi9hK29UUDRoWVNWaEtlczNKVTNWbmthVk5GenpJVzh3VVBPdjQzZFlEb0hxYTE5M215c2RVdDFRN0EKci9oaWlpY0d3TUROUzdFVkR3TjNWaGJNbWwzQ2hSYTI1dC8xbXdJREFRQUJBb0lCQUQ1ZW9QRVdYcjBreXFnNQpXL3Y2WHNLK2IzUlVpVVdpSkZnb3A1cldCdGRMTTJaOTZtdmNTZGxGRnB0a281ekNkaU9sZjZPSTdZT3IzMmttCkgwaDh5dWdieGN2TnNFY2M1dGRaSnVLaFJKNTBWR3VYWW9aeitENG5SM0psZ29XeHE2UTBmYUJ4eVZBNVhQNnMKMXFQNVhwbm9Gd3dEQ0E5d2JYM3hkRWVHa2pLRHhoS3Y2bFdhY2JnODU2eFJXdXFjZkZHQUpoTXA1bXFsZnVUawp4QTFwYjdXYUpKZERNN2RLLzljOXdWY1crN29EdVo3OEhKNEtFaVdtcTZhRG91NWRIa1MzUXVHbDRKUThwWEQvCjlJQkk4MFZ4d0tqb0Q4U3NBYUZjMlNjcGUrU096eTNBcnhmL1dXeGc5djI0YzJ3dElWcTAweEgvNyt3d1UyNk0KZ1pTMEF5RUNnWUVBK00va0s1SDFOMTZIZitsR0ptRXBGclFjUUdrTThuT2NmYW12N0k2RG12b3c2SkVCSStDSwpGNFBKL0NCci95b3lyYWV6VnIvTnZlZ1NhbkZSVjg4R3ZHMTVYcXYzd1RpR3RUcTJIN1FubnM5NXg3UDdDcWJoCmJIUVNUVVVpVDdPdDNHNm1Rd1Mvc3VaNjVqMG1sSnp0ZlZyUGpETURHVHNwdTROWTh2VmQraXNDZ1lFQTJ0a2IKdFkrTWMrSzk3cTFXbjZOWUZwYllFUnRJMjJDVUc4aFZNMDF6VXlaOHpBVzREcU1EZElDaWdtelR5UzBLWE8wZApRbWt2S2dHeW1hVE1xU29ReDNvVzVCSmtjbGFtc2RURW8vcEc5K01iZ3FPOHd2OW8waDVCOFJpQ1VqOC9JSWQxCjhwd0swK2Q1VE9mWFUwM1hyS1hGOEZrYjZHUFNqd2poNTY2cWFsRUNnWUJuNXlqNXFQSW1OU3VRbHZIY2hTYUwKZkp0dnFtN2xzTEhoS0VOM0hleUhnNE41RzFUR2pyWWNLOFRsclFSc2drcTNpaGl5V1ZhcHY0Z3hPekVrNGllRgorSkYrbjRIUEJyUDZhcEl6bXlBUWljUHBTWmZFVXZ4QU5oaU9mQmhnQUVEU2xNS0pxaW9EbzR3ZktkbzZwVzNuCnMweUkxNlNybkxGSXhRa1lMSzhhRVFLQmdBdUZSbG9tZG1SYldWaEpNN2d2cHlGNVMyS0xKeWkxU3Rhemt4aWkKU1NIbGNzaGl2Sys0a1NQKzZZOG9IM1lGc3ZmMVc0YjFkcEFsaXJ0ZjI0NUVNcUh0b1dyY05RRjM0a3FXUXN2SApEeGxaa1VjdFMzQ1FkWG9xTVpwNWlkSytsWm9teDJUQUppbkZrN01pdVVrZlhlMHV4TjdFTWgzbnMxdm9RY3dxCmU3b2hBb0dBUklURmlZMEhoclVpYzVMdWRuWGk1d1FOTFVYU3prdFVudzU5UWNZSGZ0cHhqOUQ4VGJCeXpKU0wKL2RyUzBoK2dhZVl4MGlqZHEvaEprL3dBRlVKUVBSc2pucGNlbVRwTEhWODRJWnRxd2xIYnNUSlljMVBWUk9OTQphendLcFBXQW1XNjJKb2s0ckZkV1RvdGFtN2Y0SjFONjlJa3Uxdjd5a3luRlBEUVJLNXM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtaSUNPYkhkQ2loTUo2UmJjeVUvR1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFd05ESXdNakkwTWxvWERUSTNNVEV3TkRJdwpNakkwTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExTFFMYytiTEYveGZ0eWgxMVdBMFpTY3VhTHZhNDNHeTg4VlVMQWs5cUFadUkyMGEKTElEZVlrV3JoVzZLeld0S1VvSS9uRnpKQU51VWUyNWY3RmFpblZ6eGJ4VFphdzNrelAzaWpuWnJJTXdFaHp6WApUUEEvK0w4b284TFcrTzNIMWJGTFN0OWZVTlN1Wi9XRktOdDNlS0svcFI4YlZDaWR6OWVJT2N6WGMwMytiYTIyClk1UVIvKy81SHptalF1R2pJb3NFOHVxN3RKM2JSYlZDMkEzMitVSVZVbVQ5Mk53NXlXQ2JIOWY2akxRcnhsUFMKemU1WkUyL2Erb1RQNGhZU1ZoS2VzM0pVM1Zua2FWTkZ6eklXOHdVUE92NDNkWURvSHFhMTkzbXlzZFV0MVE3QQpyL2hpaWljR3dNRE5TN0VWRHdOM1ZoYk1tbDNDaFJhMjV0LzFtd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREFJajZzVlkvQmViVEFOOGgwa1ZrN0U3VzRWTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3RoRG9YdUZHWUZLUmtxVHV5TFZyK25KcnY5amZ1RjFWMTFqVE91QWUvNmhTTndNM3lpcnRXCkVDanIyYmpkVG1Jd2VyNnNhT01qSWo5aWJFZ29DSEZIKzQxTWZHV01CMVMxK1lJZGphZWVaMTVPaS9UNzZFNUcKVUdObnNUSFB1Qnk2YzZrTmVOREVXSGJreUtyYm9yWllPUDIvUDNDeXR0UDZwUnlURjAwbTZ3Q2FTaHJYNlgvUAptZVFSakpoekhpVGZDMFdSZ0h0eEtQN0JGOEFhUEovemMrNlMvMFFrVG9BbHVsYjgwMHZWNnJyRkU1eVVpbmJXCnd5bHRxQldTLytXNlBRNlRTWXNHbjVUZThlOWpkakJuOEdSajJHaDM5UVJqZExvNXFNSC9ZY3JOeURDVmc2a08KcDFHcVh0RUVPTnBOM0hheVNGaEN5Q0YyUlFHbytIRGoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUs5azY5VUVPVERDS0tCZzZQOHdGR1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFd05ESXdNakkwTTFvWERUSTNNVEV3TkRJdwpNakkwTTFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1mNENQdFZKZm4rcXZTVGR6WUoKT2tFaURPbzF2S29TeHZTcENlSVIvRnlFaHBCRFlsbm5FcVZLVm1lTmpVN1h2c3dvTlppU1NkRGZRUnd4MnpzcwpaVEpnaFZUSEFOalhKYlA2RUQ4aW9DZGlNS0hpVEZmVEpXZTJReGZKUjh0RVVHTU9GMkZNbi9mUXA0T0doTlhmClNDTzdIVVY0SVJvTndxLzRGZktYUFhRaERxUjB4eWc1SGNXV1o4bndCUm1OQk1Xc3B0QVRXKzZ1dFQ2V3JSdTkKYkVGMDBBR3k5TEUzNTcxNUZQd2R1MXo0NXQvYmNoZmlaMmpOVGFIbW83bEExN3hPZ1hRaHNNZTF6eUhCT2JBRQo5MHVUUW1Rc0gwejdzZmRGNkNwdFhuaTZjdEJvRTc3cUFxWENzNDh1SGltcWlrSmlxQ1k5ZmRpaXJzMytILytmCkpUY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVU1BaVBxeFZqOEY1dApNQTN5SFNSV1RzVHRiaFV3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXBhMlBCdEVBY1k3enRJSTQ1TTJwRElMUG10WGwKN0FYYno4U1hhLzJUOVhYVWJFQndiZE1vS3VNRHgzbjBnbDhSa3kvVDREaGV1WnNjQkdTbkF3UWRmQi9ob1ppQwp2aVFxNHFkbXNkWDZQQWk3UUtCeEhrdCs1MGRGVS9TbzJYdnpZRGdqVUxLQkxFejlXKzd3bU9QSEFJY1p0MFZOCkhpWjhLRGprK0tRVDMyblk0RHNGZVNpakVtZlRBMHk3ZXJwOVl1dFUzUFpOSk9Vbk5nYUREYnFJcG1NQnlWZCsKYytlbUVPUElBME16ckhXU1RDSUJhakpmclUveElzV0tmKzJpOU1MODkxRWpORFdNTUJXVVJNUWVtZThkaTJmNwpZem91OExlTC9pZklqbld0VVl1dEFNN01SdUZUcDUxTDEyTDVYMm9jRzMrR2p4RHloVEtWdEtRWGtRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeC9nSSsxVWwrZjZxOUpOM05nazZRU0lNNmpXOHFoTEc5S2tKNGhIOFhJU0drRU5pCldlY1NwVXBXWjQyTlR0ZSt6Q2cxbUpKSjBOOUJIREhiT3l4bE1tQ0ZWTWNBMk5jbHMvb1FQeUtnSjJJd29lSk0KVjlNbFo3WkRGOGxIeTBSUVl3NFhZVXlmOTlDbmc0YUUxZDlJSTdzZFJYZ2hHZzNDci9nVjhwYzlkQ0VPcEhUSApLRGtkeFpabnlmQUZHWTBFeGF5bTBCTmI3cTYxUHBhdEc3MXNRWFRRQWJMMHNUZm52WGtVL0IyN1hQam0zOXR5CkYrSm5hTTFOb2VhanVVRFh2RTZCZENHd3g3WFBJY0U1c0FUM1M1TkNaQ3dmVFB1eDkwWG9LbTFlZUxweTBHZ1QKdnVvQ3BjS3pqeTRlS2FxS1FtS29KajE5MktLdXpmNGYvNThsTndJREFRQUJBb0lCQURaM3RpS1haOWUzYVdOagpBM2FoZnMrYzhiMmQwM3pUem9OM3c2eGpUOFQzaUJ1bGJ4V2ozaTFObVVsdGdnNzJydzYyNlJwY3htUnhXeS9OCjJMUStmSFlEV20za0lyUHRybVJlZWF4b3h3elRMd0g1UE9nektCNGV4Qm1uaHJtMEt0MUFTbGdEWWhOREwwMmgKQjIrbCtPVmFvemQzNkRSTGlUc2JMUWM5OE13L2RTa0creU1ZVEFESlVOczdYK1BTZENQL2x5SEdYaktHQjRWSgprdHpRdEpkSlVKazFUc2NUVUYyeUorays5cjEzZS9kNTZJYm1yMnprUllVVi9zRmRjREtkSmVCYkQrOVZ2UjB2CnJpVk52N3pNalEySzkwM2lGeTlzNlIxanN3UlM0d3NYejhZOXVCQ1I5clhzeUd1aGV3Y3BzZXM0dENlUEtxY1QKcDRBTkp0RUNnWUVBMEN0ZTYxQVgvWEFhZTIyT09QODhEYm1JOThJLy95TzF5cmhPeWhKWkF6NUtaVWNTVVRLRgpTb2pwTG43RHl4Ykg1S3lpb01pWmlQaHRWaXQ3WG5ycVhSUFVoeDBvYm5JZ3JHUG5KUXdVQnlUQXdlbkJjMUVXCktHamJiZDVyUWwzVVREdElzdWorb2NMbXhCbGRpcUQ5NHVpOXhQdnI1VkZ2TXdxWlpTdCtma2tDZ1lFQTllcE8KRmxOVGZZRjZQSFlpa1B5VkpIRy9ycjlqVFlWMVpSQXlPdHJnWGc1V3NHUEh0OGdta1l2R3MrT2FuY3NWN1R2MQpGZGtHdVUxUXpXanF0TStRejFyYnYxSFAwdkZORkphVE0vWVN2VFJ0ZkloNGRLVDhJejJlSSs1M0NqaTZ3NTJ6ClZlZzJIbmdhMUtpYWJ6QWlpb1FDM01HUVNmcWtHWW5wSGZVV2gzOENnWUE3d0NjbmpiN0ZEUGRjOUM0OVorMVoKMXlaY1R4SkZibitRcDJSZUZmUWN2VFZuYW9YMGJuYloxUUJ4U3d0eDhLRUJueGV5NU1GRkVtRjN1VlZZNGhrQgpERjhWUlNaRXhWZGhnKzlscjlqVDBCWFAwd09tME9CMlN0cW81NDJMNkJpMnBOR1NJTlJ0bzk3TzdLVHYxSlByCkhIalQ0S2R1RS9qQ0FzblN3ekEwbVFLQmdRQ0M4cnVXSTlUbmxoVFRNVTBDeTUxWGhNSy9lT2FXRnlVR0pmTzUKWjJmbWJkZzNvVXB1VU1SSTZKZHNueHhzUGdKMUMySmN1ZTVjcWhFRzhJRmF1dFN2dGdBaUJweVdCU3c0ZEYzNgpZMlJqSUJIVktJNkwvbmJOQlRpNmhYY2FHRTlMYnlSWjhJY3cvbCs3TWZUYWxGVXdVVTk4NGczRmR4UC9EWEwzCkl0VldYUUtCZ1FESk95UHF5ekpFckFacGdWRDljVVYvUXFzUEJ2RmpYQ25PYkJjVWFGZWswclJ2VUJCdDliMloKZWJ5TE0xYVJoY2ZYNVRBTEJMdDhaVTVBYWhpVmo4K3kyNWw2dzRBSTM0RWlOQTFnbWFrUHlWQ3A3M013UXh3RgpWRUs1WXk5ck9UemY4bGNzSk9HNlNXczdpdGM0V1dsTnhNK3MxU1VBYXNScHBkQkZKeDRHTGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
